[{"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/index.js":"1","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/web3React.js":"2","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/App.js":"3","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/index.js":"4","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/contract/hooks.js":"5","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/hooks/web3.js":"6","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/contract/contractSlice.js":"7","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Header/index.js":"8","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/index.js":"9","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/index.js":"10","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/proposals/proposalSlice.js":"11","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/hooks/useContract.js":"12","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/formatProposal.js":"13","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/truncateWalletAddress.js":"14","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/AddWhitelist.js":"15","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/ListWhitelist.js":"16","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/AddProposal.js":"17","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/proposals/hooks.js":"18","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/ProposalList.js":"19","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/contractHelpers.js":"20","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/constants/index.js":"21"},{"size":453,"mtime":1624282590931,"results":"22","hashOfConfig":"23"},{"size":252,"mtime":1624869572213,"results":"24","hashOfConfig":"23"},{"size":1063,"mtime":1624393263948,"results":"25","hashOfConfig":"23"},{"size":295,"mtime":1624285492348,"results":"26","hashOfConfig":"23"},{"size":2607,"mtime":1624465188620,"results":"27","hashOfConfig":"23"},{"size":2485,"mtime":1624540679966,"results":"28","hashOfConfig":"23"},{"size":1323,"mtime":1624462607732,"results":"29","hashOfConfig":"23"},{"size":1715,"mtime":1624869718129,"results":"30","hashOfConfig":"23"},{"size":2033,"mtime":1624536841026,"results":"31","hashOfConfig":"23"},{"size":2175,"mtime":1624514383123,"results":"32","hashOfConfig":"23"},{"size":877,"mtime":1624514467850,"results":"33","hashOfConfig":"23"},{"size":547,"mtime":1624377209419,"results":"34","hashOfConfig":"23"},{"size":465,"mtime":1624462683275,"results":"35","hashOfConfig":"23"},{"size":317,"mtime":1624268352380,"results":"36","hashOfConfig":"23"},{"size":1825,"mtime":1624461318515,"results":"37","hashOfConfig":"23"},{"size":814,"mtime":1624463275540,"results":"38","hashOfConfig":"23"},{"size":2329,"mtime":1624514477764,"results":"39","hashOfConfig":"23"},{"size":1287,"mtime":1624513906955,"results":"40","hashOfConfig":"23"},{"size":2491,"mtime":1624514610890,"results":"41","hashOfConfig":"23"},{"size":294,"mtime":1624282663215,"results":"42","hashOfConfig":"23"},{"size":255,"mtime":1624299500598,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1wnaujb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/index.js",[],["94","95"],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/web3React.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/App.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/index.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/contract/hooks.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/hooks/web3.js",["96"],"import { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { injected } from \"../utils/web3React\";\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else if (window.ethereum) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on(\"connect\", handleConnect);\n      ethereum.on(\"chainChanged\", handleChainChanged);\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      ethereum.on(\"networkChanged\", handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener(\"connect\", handleConnect);\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n          ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/contract/contractSlice.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Header/index.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/index.js",["97"],"import React from \"react\";\nimport { useContract } from \"../../hooks/useContract\";\nimport { useIsOwner } from \"../../states/contract/hooks\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { updateWorkflowStatus } from \"../../states/contract/contractSlice\";\nimport AddWhitelist from \"./AddWhitelist\";\nimport ListWhitelist from \"./ListWhitelist\";\nimport { setWinnerProposalId } from \"../../states/proposals/proposalSlice\";\n\nconst Admin = () => {\n  const contract = useContract();\n  const { account } = useWeb3React();\n  const dispatch = useDispatch();\n  const isOwner = useIsOwner();\n  const workflowStatus = useSelector((state) => state.contract.status);\n\n  const handleOnClick = async () => {\n    if (contract !== null && isOwner && workflowStatus < 4) {\n      const res = await contract.methods\n        .nextWorkflowStatus()\n        .send({ from: account });\n    }\n    if (contract !== null && isOwner && workflowStatus === 4) {\n      await contract.methods.results().send({ from: account });\n    }\n  };\n\n  contract.events.WorkflowStatusChange().on(\"data\", ({ returnValues }) => {\n    dispatch(updateWorkflowStatus(parseInt(returnValues[\"newStatus\"])));\n  });\n\n  contract.events.VotesTallied().on(\"data\", async () => {\n    const winnerId = await contract.methods.getWinningProposalId().call();\n    dispatch(setWinnerProposalId({ winnerId }));\n  });\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header>\n        Admin panel :{\"  \"}\n        {workflowStatus !== 5 && (\n          <Button\n            className=\"btn btn-primary\"\n            onClick={handleOnClick}\n            disabled={workflowStatus === 5}\n            size=\"sm\"\n          >\n            {workflowStatus < 4 ? \"Next Workflow\" : \"Call Result\"}\n          </Button>\n        )}\n      </Card.Header>\n      <Card.Body>\n        {workflowStatus === 0 && <AddWhitelist />}\n        <ListWhitelist />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Admin;\n","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/index.js",["98"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport AddProposal from \"./AddProposal\";\nimport {\n  useFetchProposalsList,\n  useFetchWinnerId,\n} from \"../../states/proposals/hooks\";\nimport ProposalList from \"./ProposalList\";\nimport { addProposalVote } from \"../../states/proposals/proposalSlice\";\nimport { useContract } from \"../../hooks/useContract\";\nimport { addUserHasVote } from \"../../states/contract/contractSlice\";\n\nconst Proposal = () => {\n  const dispatch = useDispatch();\n  const contract = useContract();\n  const workflowStatus = useSelector((state) => state.contract.status);\n  const userData = useSelector((state) => state.contract.userVoterData);\n  const proposalList = useSelector((state) => state.proposal.proposalList);\n  const winnerId = useSelector((state) => state.proposal.winnerId);\n\n  useFetchProposalsList();\n  useFetchWinnerId();\n\n  useEffect(() => {\n    if (contract !== null) {\n      contract.events.Voted().on(\"data\", async ({ returnValues }) => {\n        const { proposalId } = returnValues;\n        dispatch(addProposalVote(proposalId));\n        dispatch(addUserHasVote({ hasVoted: true, proposalId }));\n      });\n    }\n  }, [contract]);\n\n  const renderVoterData = () => {\n    if (workflowStatus === 3 && userData.isRegistered) {\n      return userData.hasVoted ? \"You have already voted\" : \"You can vote\";\n    }\n  };\n  return (\n    <Card>\n      <Card.Header>\n        Proposal part :{\"  \"} {renderVoterData()}{\" \"}\n        {workflowStatus === 5 && winnerId && (\n          <span className=\"fw-bold\">\n            The winner ({proposalList[winnerId].voteCount} vote(s)):{\" \"}\n            {proposalList[winnerId].description}\n          </span>\n        )}\n      </Card.Header>\n      <Card.Body>\n        {workflowStatus === 1 && userData.isRegistered && <AddProposal />}\n        {workflowStatus === 0 ? (\n          <Card.Title className=\"text-center\">\n            The voting campaign has not yet started. Come back late!\n          </Card.Title>\n        ) : (\n          <ProposalList />\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Proposal;\n","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/proposals/proposalSlice.js",["99"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { current } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  proposalList: [],\n  winnerId: null,\n};\n\nexport const proposalSlice = createSlice({\n  name: \"proposal\",\n  initialState,\n  reducers: {\n    fetchProposalList: (state, action) => {\n      state.proposalList = action.payload;\n    },\n    addProposal: (state, action) => {\n      state.proposalList.push(action.payload);\n    },\n    addProposalVote: (state, action) => {\n      state.proposalList[action.payload].voteCount =\n        state.proposalList[action.payload].voteCount + 1;\n    },\n    setWinnerProposalId: (state, action) => {\n      state.winnerId = parseInt(action.payload.winnerId);\n    },\n  },\n});\n\nexport const {\n  fetchProposalList,\n  addProposal,\n  addProposalVote,\n  setWinnerProposalId,\n} = proposalSlice.actions;\n\nexport default proposalSlice.reducer;\n","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/hooks/useContract.js",["100"],"import VOTING_CONTRACT from \"../contracts/Voting.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useMemo } from \"react\";\nimport { getContract } from \"../utils/contractHelpers\";\n\nexport function useContract() {\n  const { library, chainId } = useWeb3React();\n  return useMemo(() => {\n    if (!library) return null;\n    try {\n      return getContract(VOTING_CONTRACT, library, chainId);\n    } catch (error) {\n      console.error(\"Failed to get contract\", error);\n      return null;\n    }\n  }, [library, chainId, VOTING_CONTRACT]);\n}\n","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/formatProposal.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/truncateWalletAddress.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/AddWhitelist.js",["101"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Alert, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useContract } from \"../../hooks/useContract\";\nimport { addWhitelistAddress } from \"../../states/contract/contractSlice\";\n\nconst AddWhitelist = () => {\n  const { account } = useWeb3React();\n  const contract = useContract();\n  const dispatch = useDispatch();\n  const whitelistedAddresses = useSelector(\n    (state) => state.contract.whitelistedList\n  );\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (contract !== null) {\n      contract.events.VoterRegistered().on(\"data\", ({ returnValues }) => {\n        const newWhitelist = returnValues[\"voterAddress\"];\n        if (!whitelistedAddresses.includes(newWhitelist)) {\n          const isAlsoOwner = newWhitelist === account;\n          dispatch(addWhitelistAddress({ newWhitelist, isAlsoOwner }));\n        }\n      });\n    }\n  }, [contract]);\n\n  const addWhitelist = async (event) => {\n    event.preventDefault();\n    const address = event.target.address.value;\n    if (!whitelistedAddresses.includes(address)) {\n      setError(\"\");\n      await contract.methods.addNewVoter(address).send({ from: account });\n    } else setError(`${address} is already whitelisted`);\n  };\n\n  return (\n    <>\n      {error !== \"\" && <Alert variant=\"danger\">{error}</Alert>}\n      <Form onSubmit={addWhitelist}>\n        <Row>\n          <Col>\n            <Form.Control type=\"text\" id=\"address\" placeholder=\"@\" />\n          </Col>\n          <Col>\n            <Button type=\"submit\" variant=\"success\">\n              Whitelist\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n      <br />\n    </>\n  );\n};\nexport default AddWhitelist;\n","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/ListWhitelist.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/AddProposal.js",["102","103"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Alert, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useContract } from \"../../hooks/useContract\";\nimport {\n  serializeProposal,\n  serializeProposalDescription,\n} from \"../../utils/formatProposal\";\nimport { addProposal } from \"../../states/proposals/proposalSlice\";\n\nconst AddWhitelist = () => {\n  const { account } = useWeb3React();\n  const contract = useContract();\n  const dispatch = useDispatch();\n  const proposalList = useSelector((state) => state.proposal.proposalList);\n  const userData = useSelector((state) => state.contract.proposalList);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (contract !== null) {\n      contract.events\n        .ProposalRegistered()\n        .on(\"data\", async ({ returnValues }) => {\n          const newProposal = returnValues[\"proposalId\"];\n          if (\n            !proposalList.some(\n              (proposal) => proposal.description === newProposal\n            )\n          ) {\n            const proposal = await contract.methods\n              .getProposalById(newProposal)\n              .call();\n            dispatch(addProposal(serializeProposal(proposal)));\n          }\n        });\n    }\n  }, [contract]);\n\n  const onSubmitProposal = async (event) => {\n    event.preventDefault();\n    const description = serializeProposalDescription(\n      event.target.description.value\n    );\n    if (\n      !proposalList.some((proposal) => proposal.description === description)\n    ) {\n      setError(\"\");\n      await contract.methods.addProposal(description).send({ from: account });\n    } else setError(`${description} is already proposed`);\n  };\n\n  return (\n    <>\n      {error !== \"\" && <Alert variant=\"danger\">{error}</Alert>}\n      <Form onSubmit={onSubmitProposal}>\n        <Row>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              id=\"description\"\n              placeholder=\"Description of your proposal\"\n            />\n          </Col>\n          <Col>\n            <Button type=\"submit\" variant=\"success\">\n              New Proposal\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n      <br />\n    </>\n  );\n};\nexport default AddWhitelist;\n","/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/proposals/hooks.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/ProposalList.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/contractHelpers.js",[],"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/constants/index.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":24,"column":6,"nodeType":"110","endLine":24,"endColumn":8,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":21,"column":13,"nodeType":"114","messageId":"115","endLine":21,"endColumn":16},{"ruleId":"108","severity":1,"message":"116","line":33,"column":6,"nodeType":"110","endLine":33,"endColumn":16,"suggestions":"117"},{"ruleId":"112","severity":1,"message":"118","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":17},{"ruleId":"108","severity":1,"message":"119","line":16,"column":6,"nodeType":"110","endLine":16,"endColumn":41,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":27,"column":6,"nodeType":"110","endLine":27,"endColumn":16,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"123","line":17,"column":9,"nodeType":"114","messageId":"115","endLine":17,"endColumn":17},{"ruleId":"108","severity":1,"message":"124","line":38,"column":6,"nodeType":"110","endLine":38,"endColumn":16,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.","ArrayExpression",["128"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["129"],"'current' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'VOTING_CONTRACT'. Either exclude it or remove the dependency array. Outer scope values like 'VOTING_CONTRACT' aren't valid dependencies because mutating them doesn't re-render the component.",["130"],"React Hook useEffect has missing dependencies: 'account', 'dispatch', and 'whitelistedAddresses'. Either include them or remove the dependency array.",["131"],"'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'proposalList'. Either include them or remove the dependency array.",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [activate]",{"range":"143","text":"144"},"Update the dependencies array to be: [contract, dispatch]",{"range":"145","text":"146"},"Update the dependencies array to be: [library, chainId]",{"range":"147","text":"148"},"Update the dependencies array to be: [account, contract, dispatch, whitelistedAddresses]",{"range":"149","text":"150"},"Update the dependencies array to be: [contract, dispatch, proposalList]",{"range":"151","text":"152"},[659,661],"[activate]",[1245,1255],"[contract, dispatch]",[507,542],"[library, chainId]",[1028,1038],"[account, contract, dispatch, whitelistedAddresses]",[1338,1348],"[contract, dispatch, proposalList]"]