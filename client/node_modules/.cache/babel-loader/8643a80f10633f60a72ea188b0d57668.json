{"ast":null,"code":"var _jsxFileName = \"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport AddProposal from \"./AddProposal\";\nimport { useFetchProposalsList, useFetchWinnerId } from \"../../states/proposals/hooks\";\nimport ProposalList from \"./ProposalList\";\nimport { addProposalVote } from \"../../states/proposals/proposalSlice\";\nimport { useContract } from \"../../hooks/useContract\";\nimport { addUserHasVote } from \"../../states/contract/contractSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Proposal = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const contract = useContract();\n  const workflowStatus = useSelector(state => state.contract.status);\n  const userData = useSelector(state => state.contract.userVoterData);\n  const proposalList = useSelector(state => state.proposal.proposalList);\n  const winnerId = useSelector(state => state.proposal.winnerId);\n  useFetchProposalsList();\n  useFetchWinnerId();\n  useEffect(() => {\n    if (contract !== null) {\n      contract.events.Voted().on(\"data\", async ({\n        returnValues\n      }) => {\n        const {\n          proposalId\n        } = returnValues;\n        dispatch(addProposalVote(proposalId));\n        dispatch(addUserHasVote({\n          hasVoted: true,\n          proposalId\n        }));\n      });\n    }\n  }, [contract]);\n\n  const renderVoterData = () => {\n    if (workflowStatus === 3 && userData.isRegistered) {\n      return userData.hasVoted ? \"You have already voted\" : \"You can vote\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [\"Proposal part :\", \"  \", \" \", renderVoterData(), \" \", workflowStatus === 5 && winnerId && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"fw-bold\",\n        children: [\"The winner (\", proposalList[winnerId].voteCount, \" vote(s)):\", \" \", proposalList[winnerId].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [workflowStatus === 1 && userData.isRegistered && /*#__PURE__*/_jsxDEV(AddProposal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 59\n      }, this), workflowStatus === 0 ? /*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"text-center\",\n        children: \"The voting campaign has not yet started. Come back late!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ProposalList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Proposal, \"H2DmhMS0+ImR7RGGXExRfF+3WAA=\", false, function () {\n  return [useDispatch, useContract, useSelector, useSelector, useSelector, useSelector, useFetchProposalsList, useFetchWinnerId];\n});\n\n_c = Proposal;\nexport default Proposal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Proposal\");","map":{"version":3,"sources":["/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Proposal/index.js"],"names":["React","useEffect","useDispatch","useSelector","Card","AddProposal","useFetchProposalsList","useFetchWinnerId","ProposalList","addProposalVote","useContract","addUserHasVote","Proposal","dispatch","contract","workflowStatus","state","status","userData","userVoterData","proposalList","proposal","winnerId","events","Voted","on","returnValues","proposalId","hasVoted","renderVoterData","isRegistered","voteCount","description"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport AddProposal from \"./AddProposal\";\nimport {\n  useFetchProposalsList,\n  useFetchWinnerId,\n} from \"../../states/proposals/hooks\";\nimport ProposalList from \"./ProposalList\";\nimport { addProposalVote } from \"../../states/proposals/proposalSlice\";\nimport { useContract } from \"../../hooks/useContract\";\nimport { addUserHasVote } from \"../../states/contract/contractSlice\";\n\nconst Proposal = () => {\n  const dispatch = useDispatch();\n  const contract = useContract();\n  const workflowStatus = useSelector((state) => state.contract.status);\n  const userData = useSelector((state) => state.contract.userVoterData);\n  const proposalList = useSelector((state) => state.proposal.proposalList);\n  const winnerId = useSelector((state) => state.proposal.winnerId);\n\n  useFetchProposalsList();\n  useFetchWinnerId();\n\n  useEffect(() => {\n    if (contract !== null) {\n      contract.events.Voted().on(\"data\", async ({ returnValues }) => {\n        const { proposalId } = returnValues;\n        dispatch(addProposalVote(proposalId));\n        dispatch(addUserHasVote({ hasVoted: true, proposalId }));\n      });\n    }\n  }, [contract]);\n\n  const renderVoterData = () => {\n    if (workflowStatus === 3 && userData.isRegistered) {\n      return userData.hasVoted ? \"You have already voted\" : \"You can vote\";\n    }\n  };\n  return (\n    <Card>\n      <Card.Header>\n        Proposal part :{\"  \"} {renderVoterData()}{\" \"}\n        {workflowStatus === 5 && winnerId && (\n          <span className=\"fw-bold\">\n            The winner ({proposalList[winnerId].voteCount} vote(s)):{\" \"}\n            {proposalList[winnerId].description}\n          </span>\n        )}\n      </Card.Header>\n      <Card.Body>\n        {workflowStatus === 1 && userData.isRegistered && <AddProposal />}\n        {workflowStatus === 0 ? (\n          <Card.Title className=\"text-center\">\n            The voting campaign has not yet started. Come back late!\n          </Card.Title>\n        ) : (\n          <ProposalList />\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Proposal;\n"]},"metadata":{},"sourceType":"module"}