{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { current } from \"@reduxjs/toolkit\";\nconst initialState = {\n  proposalList: [],\n  winnerId: null\n};\nexport const proposalSlice = createSlice({\n  name: \"proposal\",\n  initialState,\n  reducers: {\n    fetchProposalList: (state, action) => {\n      state.proposalList = action.payload;\n    },\n    addProposal: (state, action) => {\n      state.proposalList.push(action.payload);\n    },\n    addProposalVote: (state, action) => {\n      state.proposalList[action.payload].voteCount = state.proposalList[action.payload].voteCount + 1;\n    },\n    setWinnerProposalId: (state, action) => {\n      state.winnerId = parseInt(action.payload.winnerId);\n    }\n  }\n});\nexport const {\n  fetchProposalList,\n  addProposal,\n  addProposalVote,\n  setWinnerProposalId\n} = proposalSlice.actions;\nexport default proposalSlice.reducer;","map":{"version":3,"sources":["/Users/Xutyr/Documents/Lab/Dapp_example/client/src/states/proposals/proposalSlice.js"],"names":["createSlice","current","initialState","proposalList","winnerId","proposalSlice","name","reducers","fetchProposalList","state","action","payload","addProposal","push","addProposalVote","voteCount","setWinnerProposalId","parseInt","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGL,WAAW,CAAC;AACvCM,EAAAA,IAAI,EAAE,UADiC;AAEvCJ,EAAAA,YAFuC;AAGvCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAA5B;AACD,KAHO;AAIRC,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACN,YAAN,CAAmBU,IAAnB,CAAwBH,MAAM,CAACC,OAA/B;AACD,KANO;AAORG,IAAAA,eAAe,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,CAACN,YAAN,CAAmBO,MAAM,CAACC,OAA1B,EAAmCI,SAAnC,GACEN,KAAK,CAACN,YAAN,CAAmBO,MAAM,CAACC,OAA1B,EAAmCI,SAAnC,GAA+C,CADjD;AAED,KAVO;AAWRC,IAAAA,mBAAmB,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACL,QAAN,GAAiBa,QAAQ,CAACP,MAAM,CAACC,OAAP,CAAeP,QAAhB,CAAzB;AACD;AAbO;AAH6B,CAAD,CAAjC;AAoBP,OAAO,MAAM;AACXI,EAAAA,iBADW;AAEXI,EAAAA,WAFW;AAGXE,EAAAA,eAHW;AAIXE,EAAAA;AAJW,IAKTX,aAAa,CAACa,OALX;AAOP,eAAeb,aAAa,CAACc,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { current } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  proposalList: [],\n  winnerId: null,\n};\n\nexport const proposalSlice = createSlice({\n  name: \"proposal\",\n  initialState,\n  reducers: {\n    fetchProposalList: (state, action) => {\n      state.proposalList = action.payload;\n    },\n    addProposal: (state, action) => {\n      state.proposalList.push(action.payload);\n    },\n    addProposalVote: (state, action) => {\n      state.proposalList[action.payload].voteCount =\n        state.proposalList[action.payload].voteCount + 1;\n    },\n    setWinnerProposalId: (state, action) => {\n      state.winnerId = parseInt(action.payload.winnerId);\n    },\n  },\n});\n\nexport const {\n  fetchProposalList,\n  addProposal,\n  addProposalVote,\n  setWinnerProposalId,\n} = proposalSlice.actions;\n\nexport default proposalSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}