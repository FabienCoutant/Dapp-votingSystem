{"ast":null,"code":"export function getContract(contractJSON, library, chainId) {\n  if (!contractJSON) {\n    throw Error(`JSON file empty`);\n  }\n\n  const deployedNetwork = contractJSON.networks[chainId];\n  return new library.eth.Contract(contractJSON.abi, deployedNetwork && deployedNetwork.address);\n}","map":{"version":3,"sources":["/Users/Xutyr/Documents/Lab/Dapp_example/client/src/utils/contractHelpers.js"],"names":["getContract","contractJSON","library","chainId","Error","deployedNetwork","networks","eth","Contract","abi","address"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,YAArB,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqD;AAC1D,MAAI,CAACF,YAAL,EAAmB;AACjB,UAAMG,KAAK,CAAE,iBAAF,CAAX;AACD;;AACD,QAAMC,eAAe,GAAGJ,YAAY,CAACK,QAAb,CAAsBH,OAAtB,CAAxB;AACA,SAAO,IAAID,OAAO,CAACK,GAAR,CAAYC,QAAhB,CACLP,YAAY,CAACQ,GADR,EAELJ,eAAe,IAAIA,eAAe,CAACK,OAF9B,CAAP;AAID","sourcesContent":["export function getContract(contractJSON, library, chainId) {\n  if (!contractJSON) {\n    throw Error(`JSON file empty`);\n  }\n  const deployedNetwork = contractJSON.networks[chainId];\n  return new library.eth.Contract(\n    contractJSON.abi,\n    deployedNetwork && deployedNetwork.address\n  );\n}\n"]},"metadata":{},"sourceType":"module"}