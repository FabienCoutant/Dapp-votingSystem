{"ast":null,"code":"var _jsxFileName = \"/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/ListWhitelist.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ListGroup, Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListWhitelist = () => {\n  _s();\n\n  const whitelistedAddresses = useSelector(state => state.contract.whitelistedList);\n\n  const renderWhitelisted = () => {\n    return whitelistedAddresses.map(address => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    variant: \"flush\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Addresses already whitelisted : \", whitelistedAddresses.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderWhitelisted()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListWhitelist, \"YeraEbtjyo7s6qB6GiNs1FtaSFw=\", false, function () {\n  return [useSelector];\n});\n\n_c = ListWhitelist;\nexport default ListWhitelist;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListWhitelist\");","map":{"version":3,"sources":["/Users/Xutyr/Documents/Lab/Dapp_example/client/src/components/Admin/ListWhitelist.js"],"names":["React","useSelector","ListGroup","Table","ListWhitelist","whitelistedAddresses","state","contract","whitelistedList","renderWhitelisted","map","address","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iBAAjC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,oBAAoB,GAAGJ,WAAW,CACrCK,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,eADY,CAAxC;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,WAAOJ,oBAAoB,CAACK,GAArB,CAA0BC,OAAD,IAAa;AAC3C,0BACE;AAAA,+BACE;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,OAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANM,CAAP;AAOD,GARD;;AASA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACE;AAAA,+BACE;AAAA,iCACE;AAAA,2DACmCN,oBAAoB,CAACO,MADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBAAQH,iBAAiB;AAAzB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5BD;;GAAML,a;UACyBH,W;;;KADzBG,a;AA8BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ListGroup, Table } from \"react-bootstrap\";\n\nconst ListWhitelist = () => {\n  const whitelistedAddresses = useSelector(\n    (state) => state.contract.whitelistedList\n  );\n\n  const renderWhitelisted = () => {\n    return whitelistedAddresses.map((address) => {\n      return (\n        <tr key={address}>\n          <td>{address}</td>\n        </tr>\n      );\n    });\n  };\n  return (\n    <ListGroup variant=\"flush\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>\n              Addresses already whitelisted : {whitelistedAddresses.length}\n            </th>\n          </tr>\n        </thead>\n        <tbody>{renderWhitelisted()}</tbody>\n      </Table>\n    </ListGroup>\n  );\n};\n\nexport default ListWhitelist;\n"]},"metadata":{},"sourceType":"module"}